# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Authentication {
  accessToken: String!
}

type College {
  courses: [Course!]
  id: ID!
  name: String!
  university: University!
  universityId: String!
}

type Course {
  college: College!
  collegeId: String!
  id: ID!
  name: String!
  university: University!
  universityId: String!
}

input CreateUniversityInput {
  name: String!
}

type GroupedByRoleUniversitiesObject {
  role: String!
  universities: [UniversityObject!]!
}

input LoginUserInput {
  email: String!
  password: String!
}

type Mutation {
  createUniversity(logo: Upload, university: CreateUniversityInput!): UniversityObject!
  deleteUniversity(university: UniversityInput!): UniversityObject!
  leaveUniversity(university: UniversityInput!): UniversityObject!
  login(user: LoginUserInput!): Authentication!
  logout: Authentication
  refreshTokens: Authentication!
  register(avatar: Upload, user: RegisterUserInput!): Authentication!
}

type Query {
  me: UserObject!
}

input RegisterUserInput {
  email: String!
  fatherInitial: String!
  firstName: String!
  lastName: String!
  password: String!
}

type Role {
  id: ID!
  name: String!
  scopes: [Scope!]
  universityUsers: [UniversityUser!]
}

type Scope {
  id: ID!
  name: String!
  roles: [Role!]
}

type University {
  colleges: [College!]
  courses: [Course!]
  id: ID!
  logo: String
  name: String!
  universityUsers: [UniversityUser!]
}

input UniversityInput {
  id: ID!
  logo: String
  name: String!
}

type UniversityObject {
  id: ID!
  logo: String
  name: String!
}

type UniversityUser {
  role: Role!
  roleId: String!
  university: University!
  universityId: String!
  user: User!
  userId: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  avatar: String
  email: String!

  """First letter of the father's first name"""
  fatherInitial: String!
  firstName: String!
  id: ID!
  lastName: String!
  password: String!
  universityUsers: [UniversityUser!]
}

type UserObject {
  avatar: String
  email: String!

  """First letter of the father's first name"""
  fatherInitial: String!
  firstName: String!
  groupedByRoleUniversities: [GroupedByRoleUniversitiesObject!]!
  id: ID!
  lastName: String!
}
